import cv2
from keras.models import model_from_json
import numpy as np
import os

# -------- Load the model architecture and weights -------- #
json_path = r"C:\Users\Krishna\Desktop\faceemotiondetection\emotiondetector.json"
weights_path = r"C:\Users\Krishna\Desktop\faceemotiondetection\emotiondetector.h5"

# Check if files exist 
if not os.path.exists(json_path):
    print("‚ùå JSON file not found!")
    exit()
if not os.path.exists(weights_path):
    print("‚ùå H5 weights file not found!")
    exit()

# Load the model
with open(json_path, "r") as json_file:
    model_json = json_file.read()
model = model_from_json(model_json)
model.load_weights(weights_path)
print("‚úÖ Model loaded successfully.")

# -------- Haar cascade for face detection -------- #
haar_file = cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'
face_cascade = cv2.CascadeClassifier(haar_file)

# -------- Feature extractor function -------- #
def extract_features(image):
    feature = np.array(image)
    feature = feature.reshape(1, 48, 48, 1)
    return feature / 255.0

# -------- Label mapping -------- #
labels = {
    0: 'Angry', 1: 'Disgust', 2: 'Fear',
    3: 'Happy', 4: 'Neutral', 5: 'Sad', 6: 'Surprise'
}

# -------- Start Webcam -------- #
webcam = cv2.VideoCapture(0)

print("üì∑ Webcam started. Press 'Esc' to exit.")
while True:
    ret, frame = webcam.read()
    if not ret:
        print("‚ùå Failed to capture frame from webcam.")
        break

    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)

    for (x, y, w, h) in faces:
        roi_gray = gray[y:y+h, x:x+w]
        cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)
        roi_gray = cv2.resize(roi_gray, (48, 48))
        img = extract_features(roi_gray)
        prediction = model.predict(img)
        label = labels[np.argmax(prediction)]

        # Display label
        cv2.putText(frame, label, (x, y-10),
                    cv2.FONT_HERSHEY_SIMPLEX, 0.9, (0, 0, 255), 2)

    cv2.imshow("Real-Time Facial Emotion Detection", frame)

    # Exit on 'Esc' key
    if cv2.waitKey(1) & 0xFF == 27:
        break

# -------- Cleanup -------- #
webcam.release()
cv2.destroyAllWindows()
print("üëã Webcam closed.")
